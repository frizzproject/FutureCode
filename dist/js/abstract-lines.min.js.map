{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/seeded-rand/dist/jsrand.js","webpack:///./src/js/Demo/PerlinNoise.js","webpack:///./src/js/Demo/Utils.js","webpack:///./src/js/Demo/AbstractLines.js","webpack:///./src/js/Demo/CanvasWorker.js","webpack:///./src/js/abstract-lines.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_toConsumableArray","arr","Array","isArray","_arrayLikeToArray","_arrayWithoutHoles","iter","iterator","from","_iterableToArray","minLen","toString","slice","constructor","test","_unsupportedIterableToArray","TypeError","_nonIterableSpread","len","length","arr2","_typeof","obj","Srand","seed","this","randomize","_seed","_mz","_mw","Math","floor","random","getState","mz","mw","setState","state","Error","inRange","a","b","intInRange","min","max","choice","choices","k","sample","j","maxIndex","selected","shuffle","temp","_oldSrand","undefined","noConflict","scaled_cosine","cos","PI","_perlin","sampleNoise","perlin","x","y","z","options","PERLIN_SIZE","opts","assign","octaves","fallof","rxf","ryf","n1","n2","n3","xi","yi","zi","xf","yf","zf","ampl","of","rgb","g","rgba","clamp","num","mix","BACKGROUND","LINE_COLOR","TAU","sampleNoiseMapLinear","map","xn","yn","v1","v2","v3","v4","AbstractLines","canvas","srand","context","getContext","alpha","desynchronized","imageSmoothingEnabled","perlinNoise","xr","yr","w","h","xa","xb","ya","yb","ret","xd","yd","id","generateNoiseMap","window","addEventListener","resized","lastFrame","clientHeight","dpr","ceil","devicePixelRatio","clientWidth","width","height","scale","progress","invalidate","strokeStyle","lineWidth","fillStyle","fillRect","streams","STREAM_NUMBERS","invalidateStream","x1","x2","x3","x4","p1","dt","cosX","cosY","sinX","sin","sinY","vx","vy","angle","cosa","sina","rvx","rvy","beginPath","moveTo","lineTo","stroke","CanvasWorker","draw","active","_loop","animation","requestAnimationFrame","play","stop","time","demo","document","getElementById"],"mappings":"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","file":"abstract-lines.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","/** @format  */\n\n/*!\n * jsrand - https://github.com/DomenicoDeFelice/jsrand\n *\n * Copyright (c) 2014-2020 Domenico De Felice\n * Released under the MIT License\n *\n * @license\n */\n'use strict';\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction Srand(seed) {\n  if (seed != null) {\n    this.seed(seed);\n  } else {\n    this.randomize();\n  }\n}\n\nSrand.prototype = {};\n/**\n * Set or get (if no argument is given) the seed for the pseudo-random\n * number generator. The seed can be any float or integer number.\n */\n\nSrand.seed = Srand.prototype.seed = function (seed) {\n  if (seed == null) {\n    return this._seed;\n  } // Use only one seed (mw), mz is fixed.\n  // Must not be zero, nor 0x9068ffff.\n\n\n  this._mz = 123456789;\n  return this._mw = this._seed = seed;\n};\n/**\n * Set and return a random seed.\n */\n\n\nSrand.randomize = Srand.prototype.randomize = function () {\n  return this.seed(1 + Math.floor(Math.random() * 0xffffffff));\n};\n/**\n * Return an object with the state of the generator. Use setState to\n * resume the state.\n */\n\n\nSrand.getState = Srand.prototype.getState = function () {\n  return {\n    seed: this._seed,\n    mz: this._mz,\n    mw: this._mw\n  };\n};\n/**\n * Resume a state previously returned by getState.\n */\n\n\nSrand.setState = Srand.prototype.setState = function (state) {\n  if (state == null || _typeof(state) !== 'object' || typeof state.seed !== 'number' || typeof state.mz !== 'number' || typeof state.mw !== 'number') {\n    throw new Error('Invalid state.');\n  }\n\n  this._seed = state.seed;\n  this._mz = state.mz;\n  this._mw = state.mw;\n};\n/**\n * Return a pseudo-random number between 0 inclusive and 1 exclusive.\n *\n * The algorithm used is MWC (multiply-with-carry) by George Marsaglia.\n *\n * Implementation based on:\n * - http://en.wikipedia.org/wiki/Random_number_generation#Computational_methods\n * - http://stackoverflow.com/questions/521295/javascript-random-seeds#19301306\n */\n\n\nSrand.random = Srand.prototype.random = function () {\n  if (this._seed == null) {\n    this.randomize();\n  }\n\n  var mz = this._mz;\n  var mw = this._mw; // The 16 least significant bits are multiplied by a constant\n  // and then added to the 16 most significant bits. 32 bits result.\n\n  mz = (mz & 0xffff) * 36969 + (mz >> 16) & 0xffffffff;\n  mw = (mw & 0xffff) * 18000 + (mw >> 16) & 0xffffffff;\n  this._mz = mz;\n  this._mw = mw;\n  var x = ((mz << 16) + mw & 0xffffffff) / 0x100000000;\n  return 0.5 + x;\n};\n/**\n * Return a pseudo-random float number between a inclusive and b exclusive.\n */\n\n\nSrand.inRange = Srand.prototype.inRange = function (a, b) {\n  return a + this.random() * (b - a);\n};\n/**\n * Return a psuedo-random integer between min and max inclusive.\n */\n\n\nSrand.intInRange = Srand.prototype.intInRange = function (min, max) {\n  return min + Math.floor(this.random() * (max - min + 1));\n};\n/**\n * Return a random element from the input array.\n *\n * If arr is empty, an exception is thrown.\n */\n\n\nSrand.choice = Srand.prototype.choice = function (arr) {\n  if (arr.length === 0) {\n    throw new Error('Cannot choose random element from empty array.');\n  }\n\n  var randomIndex = this.intInRange(0, arr.length - 1);\n  return arr[randomIndex];\n};\n/**\n * Return a k-sized array sampled with replacement from the input array,\n * i.e. each element can be sampled more than once.\n *\n * If k > 0 and arr is empty, throws an exception.\n */\n\n\nSrand.choices = Srand.prototype.choices = function (arr, k) {\n  var sample = new Array(k);\n\n  for (var i = 0; i < k; i++) {\n    sample[i] = this.choice(arr);\n  }\n\n  return sample;\n};\n/**\n * Return a k-sized array sampled without replacement from the input array.\n *\n * If k > arr.length an exception is thrown.\n */\n\n\nSrand.sample = Srand.prototype.sample = function (arr, k) {\n  if (k > arr.length) {\n    throw new Error('Sample size cannot exceed population size.');\n  }\n\n  if (k === arr.length) {\n    return _toConsumableArray(arr);\n  }\n\n  var maxIndex = arr.length - 1;\n  var sample = new Array(k);\n  var selected = {};\n\n  for (var i = 0, j; i < k; i++) {\n    do {\n      j = this.intInRange(0, maxIndex);\n    } while (selected[j]);\n\n    sample[i] = arr[j];\n    selected[j] = true;\n  }\n\n  return sample;\n};\n/**\n * Shuffle the input array using the Fisher-Yates algorithm and return it\n * (the input array is modified).\n */\n\n\nSrand.shuffle = Srand.prototype.shuffle = function (arr) {\n  for (var i = arr.length - 1; i > 0; i--) {\n    var j = this.intInRange(0, i - 1);\n    var temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n  }\n\n  return arr;\n}; // Keep flow happy.\n\n\nSrand._oldSrand = undefined;\n\nSrand.noConflict = function () {\n  return Srand;\n};\n\nmodule.exports = Srand;\n","// Forked and adapted from p5.js\r\n\r\n//////////////////////////////////////////////////////////////\r\n\r\n// http://mrl.nyu.edu/~perlin/noise/\r\n// Adapting from PApplet.java\r\n// which was adapted from toxi\r\n// which was adapted from the german demo group farbrausch\r\n// as used in their demo \"art\": http://www.farb-rausch.de/fr010src.zip\r\n\r\n// someday we might consider using \"improved noise\"\r\n// http://mrl.nyu.edu/~perlin/paper445.pdf\r\n// See: https://github.com/shiffman/The-Nature-of-Code-Examples-p5.js/\r\n//      blob/main/introduction/Noise1D/noise.js\r\n\r\n\r\nconst PERLIN_YWRAPB = 4;\r\nconst PERLIN_YWRAP = 1 << PERLIN_YWRAPB;\r\nconst PERLIN_ZWRAPB = 8;\r\nconst PERLIN_ZWRAP = 1 << PERLIN_ZWRAPB;\r\nconst PERLIN_SIZE = 4095;\r\n\r\n\r\nconst scaled_cosine = i => 0.5 * (1.0 - Math.cos(i * Math.PI));\r\n\r\n/**\r\n * Returns the Perlin noise value at specified coordinates. Perlin noise is\r\n * a random sequence generator producing a more naturally ordered, harmonic\r\n * succession of numbers compared to the standard <b>random()</b> function.\r\n * It was invented by Ken Perlin in the 1980s and been used since in\r\n * graphical applications to produce procedural textures, natural motion,\r\n * shapes, terrains etc.<br /><br /> The main difference to the\r\n * <b>random()</b> function is that Perlin noise is defined in an infinite\r\n * n-dimensional space where each pair of coordinates corresponds to a\r\n * fixed semi-random value (fixed only for the lifespan of the program; see\r\n * the <a href=\"#/p5/noiseSeed\">noiseSeed()</a> function). p5.js can compute 1D, 2D and 3D noise,\r\n * depending on the number of coordinates given. The resulting value will\r\n * always be between 0.0 and 1.0. The noise value can be animated by moving\r\n * through the noise space as demonstrated in the example above. The 2nd\r\n * and 3rd dimension can also be interpreted as time.<br /><br />The actual\r\n * noise is structured similar to an audio signal, in respect to the\r\n * function's use of frequencies. Similar to the concept of harmonics in\r\n * physics, perlin noise is computed over several octaves which are added\r\n * together for the final result. <br /><br />Another way to adjust the\r\n * character of the resulting sequence is the scale of the input\r\n * coordinates. As the function works within an infinite space the value of\r\n * the coordinates doesn't matter as such, only the distance between\r\n * successive coordinates does (eg. when using <b>noise()</b> within a\r\n * loop). As a general rule the smaller the difference between coordinates,\r\n * the smoother the resulting noise sequence will be. Steps of 0.005-0.03\r\n * work best for most applications, but this will differ depending on use.\r\n *\r\n */\r\nlet _perlin = null;\r\nexport function sampleNoise(perlin, x, y, z, options) {\r\n  perlin = perlin || _perlin;\r\n  if (perlin == null) {\r\n    perlin = _perlin = new Array(PERLIN_SIZE + 1);\r\n    for (let i = 0; i < PERLIN_SIZE + 1; i++) {\r\n      _perlin[i] = Math.random();\r\n    }\r\n  }\r\n  \r\n  let opts = Object.assign({\r\n    octaves: 4,\r\n    fallof: 0.5\r\n  }, options);\r\n\r\n  if (x < 0) {\r\n    x = -x;\r\n  }\r\n  if (y < 0) {\r\n    y = -y;\r\n  }\r\n  if (z < 0) {\r\n    z = -z;\r\n  }\r\n\r\n  let xi = Math.floor(x),\r\n    yi = Math.floor(y),\r\n    zi = Math.floor(z);\r\n  let xf = x - xi;\r\n  let yf = y - yi;\r\n  let zf = z - zi;\r\n  let rxf, ryf;\r\n\r\n  let r = 0;\r\n  let ampl = 0.5;\r\n\r\n  let n1, n2, n3;\r\n\r\n  for (let o = 0; o < opts.octaves; o++) {\r\n    let of = xi + (yi << PERLIN_YWRAPB) + (zi << PERLIN_ZWRAPB);\r\n\r\n    rxf = scaled_cosine(xf);\r\n    ryf = scaled_cosine(yf);\r\n\r\n    n1 = perlin[of & PERLIN_SIZE];\r\n    n1 += rxf * (perlin[(of + 1) & PERLIN_SIZE] - n1);\r\n    n2 = perlin[(of + PERLIN_YWRAP) & PERLIN_SIZE];\r\n    n2 += rxf * (perlin[(of + PERLIN_YWRAP + 1) & PERLIN_SIZE] - n2);\r\n    n1 += ryf * (n2 - n1);\r\n\r\n    of += PERLIN_ZWRAP;\r\n    n2 = perlin[of & PERLIN_SIZE];\r\n    n2 += rxf * (perlin[(of + 1) & PERLIN_SIZE] - n2);\r\n    n3 = perlin[(of + PERLIN_YWRAP) & PERLIN_SIZE];\r\n    n3 += rxf * (perlin[(of + PERLIN_YWRAP + 1) & PERLIN_SIZE] - n3);\r\n    n2 += ryf * (n3 - n2);\r\n\r\n    n1 += scaled_cosine(zf) * (n2 - n1);\r\n\r\n    r += n1 * ampl;\r\n    ampl *= opts.fallof;\r\n    xi <<= 1;\r\n    xf *= 2;\r\n    yi <<= 1;\r\n    yf *= 2;\r\n    zi <<= 1;\r\n    zf *= 2;\r\n\r\n    if (xf >= 1.0) {\r\n      xi++;\r\n      xf--;\r\n    }\r\n    if (yf >= 1.0) {\r\n      yi++;\r\n      yf--;\r\n    }\r\n    if (zf >= 1.0) {\r\n      zi++;\r\n      zf--;\r\n    }\r\n  }\r\n  return r;\r\n}\r\n\r\nexport function generateNoiseMap(xr, yr, options={}) {\r\n  let o = Object.assign({\r\n    w: 256,\r\n    h: 256,\r\n    octaves: 4,\r\n    fallof: 0.5\r\n  }, options);\r\n\r\n  let xa = xr[0]; let xb = xr[1];\r\n  let ya = yr[0]; let yb = yr[1];\r\n\r\n  let perlin = null;\r\n  if (perlin == null) {\r\n    perlin = new Array(PERLIN_SIZE + 1);\r\n    for (let i = 0; i < PERLIN_SIZE + 1; i++) {\r\n      perlin[i] = Math.random();\r\n    }\r\n  }\r\n\r\n  let ret = new Array(o.w * o.h);\r\n  let xd = (xb-xa) / o.w;\r\n  let yd = (yb-ya) / o.h;\r\n  for (let i = 0; i < o.w; i++)\r\n    for (let j = 0; j < o.h; j++) {\r\n      let x = xa + xd*i;\r\n      let y = ya + yd*j;\r\n      let id = j*o.w + i;\r\n      ret[Math.floor(id)] = sampleNoise(perlin, x,y,0,options);\r\n    }\r\n\r\n  return ret;\r\n};","export function applyPerspective(perspective, p3)\r\n{\r\n  const inv = p3[2]*perspective[11];\r\n  const pinv = 1/inv;\r\n  return [(p3[0]*perspective[0])*pinv,(p3[1]*perspective[5])*pinv,(p3[2]*perspective[10]+perspective[14])*pinv];\r\n}\r\n\r\nexport function newPerspective(fieldOfViewYInRadians, aspect, zNear, zFar, dst) {\r\n  dst = dst || new Float32Array(16);\r\n\r\n  var f = Math.tan(Math.PI * 0.5 - 0.5 * fieldOfViewYInRadians);\r\n  var rangeInv = 1.0 / (zNear - zFar);\r\n\r\n  dst[0]  = f / aspect;\r\n  dst[1]  = 0;\r\n  dst[2]  = 0;\r\n  dst[3]  = 0;\r\n\r\n  dst[4]  = 0;\r\n  dst[5]  = f;\r\n  dst[6]  = 0;\r\n  dst[7]  = 0;\r\n\r\n  dst[8]  = 0;\r\n  dst[9]  = 0;\r\n  dst[10] = (zNear + zFar) * rangeInv;\r\n  dst[11] = -1;\r\n\r\n  dst[12] = 0;\r\n  dst[13] = 0;\r\n  dst[14] = zNear * zFar * rangeInv * 2;\r\n  dst[15] = 0;\r\n\r\n  return dst;\r\n}\r\n\r\nexport function applyScreen(p3, w, h) {\r\n  let cx = w * .5;\r\n  let cy = h * .5;\r\n  return [p3[0]*cx + cx, p3[1]*cy + cy];\r\n}\r\n\r\n/**\r\n* Binary search element\r\n* from a flat array of integers.\r\n*\r\n* @param {array} arr The array. Needs to be sorted.\r\n* @param {function} key Cmp function: value => value - search\r\n*/\r\nexport function binSearch(arr, key) {\r\n let l = 0;\r\n let r = arr.length;\r\n while (l<r) {\r\n  const m = l + r >> 1;\r\n  const v = key(arr[m]);\r\n  if (v < 0) l = m + 1;\r\n  else r = m;\r\n }\r\n return l;\r\n}\r\n\r\nexport function cross(a,b) {\r\n  return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\r\n}\r\nexport function crossS(a,b) {\r\n  const d = cross(a,b);\r\n  return d[0]*d[0]+d[1]*d[1]+d[2]*d[2];\r\n}\r\nexport function normalize(a) {\r\n  let l = 1/Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);\r\n  return [a[0]*l,a[1]*l,a[2]*l];\r\n}\r\n\r\nexport function rnd2dCircle(srand=Math) {\r\n  const a = srand.random() * 2.0 * Math.PI;\r\n  let r = srand.random() + srand.random();\r\n  r = r > 1 ? 2 - r : r;\r\n  r = 1 - r ; r = 1 - r*r;\r\n\r\n  return [Math.cos(a)*r, Math.sin(a)*r];\r\n}\r\n\r\nexport function rnd2d(srand=Math) {\r\n  return [srand.random() * 2.0 - 1.0, srand.random() * 2.0 - 1.0];\r\n}\r\n\r\nexport function download(data, filename, type) {\r\n  if ('chooseFileSystemEntries' in window) {\r\n    const opts = {\r\n      type: 'save-file',\r\n      accepts: [{\r\n        description: filename,\r\n        extensions: [type],\r\n        mimeTypes: ['text/json'],\r\n      }],\r\n    };\r\n    let fileHandle = window.chooseFileSystemEntries(opts).then(h => {\r\n      h.createWritable().then(w => {\r\n        w.write(data).then(w2=>w.close().then(()=>{}));\r\n      })\r\n    });\r\n  } else {\r\n    var file = new Blob([data], {type: type});\r\n\r\n    var a = document.createElement(\"a\"),\r\n            url = URL.createObjectURL(file);\r\n    a.href = url;\r\n    a.download = filename;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    setTimeout(function() {\r\n        document.body.removeChild(a);\r\n        window.URL.revokeObjectURL(url);\r\n    }, 0);\r\n  }\r\n}\r\n\r\nexport function upload() {\r\n  return new Promise((r,j)=>{\r\n    let inp = document.createElement(\"input\");\r\n    inp.type = \"file\";\r\n    inp.onchange = (e) => {\r\n      let f = inp.files[0];\r\n      if (f && f.text) r(f.text());\r\n      else j(new Error('AbortError'));\r\n    };\r\n    inp.click();\r\n  });\r\n}\r\n\r\nexport function rgb(r,g,b) { return \"rgb(\"+Math.floor(r)+\",\"+Math.floor(g)+\",\"+Math.floor(b)+\")\"; }\r\nexport function rgba(r,g,b,a) { return \"rgba(\"+Math.floor(r)+\",\"+Math.floor(g)+\",\"+Math.floor(b)+\",\"+a+\")\"; }\r\nexport function clamp(num, min, max) { return num <= min ? min : num >= max ? max : num; }\r\nexport function mix(x,y,a) { return x + (y-x)*a; }\r\nexport function mix3(x1,x2,x3,y1,y2,y3,a) { return [mix(x1,y1,a),mix(x2,y2,a),mix(x3,y3,a)]; }","import Srand from \"seeded-rand\";\r\nimport { sampleNoise, generateNoiseMap } from \"./PerlinNoise.js\";\r\nimport { rgb, rgba, clamp, mix } from \"./Utils.js\";\r\n\r\nconst STREAM_NUMBERS = 834;\r\nconst BACKGROUND = [4,13,33]; // HSB: 221,88,13\r\nconst LINE_COLOR = [57,141,237,100]; // HSB: 212,76,93,100\r\nconst PERLIN_SIZE = 256;\r\nconst STROKE_WIDTH = .1;\r\n\r\nconst TAU = Math.PI * 2.0;\r\n\r\nfunction sampleNoiseMapLinear(map, x, y) {\r\n  x*= PERLIN_SIZE; y*=PERLIN_SIZE;\r\n  x = clamp(x, 0, PERLIN_SIZE-1);\r\n  y = clamp(y, 0, PERLIN_SIZE-1);\r\n\r\n  let xi = Math.floor(x);\r\n  let yi = Math.floor(y);\r\n  let xn = Math.min(xi+1,PERLIN_SIZE-1);\r\n  let yn = Math.min(yi+1,PERLIN_SIZE-1);\r\n\r\n  let xf = x-xi;\r\n  let yf = y-yi;\r\n\r\n  let v1 = map[xi+yi*PERLIN_SIZE];\r\n  let v2 = map[xn+yi*PERLIN_SIZE];\r\n  let v3 = map[xi+yn*PERLIN_SIZE];\r\n  let v4 = map[xn+yn*PERLIN_SIZE];\r\n  return mix(mix(v1,v2,xf),mix(v3,v4,xf),yf);\r\n}\r\n\r\nfunction sampleNoiseMapNearest(map, x, y) {\r\n  x*= PERLIN_SIZE; y*=PERLIN_SIZE;\r\n  x = clamp(Math.floor(x), 0, PERLIN_SIZE-1);\r\n  y = clamp(Math.floor(y), 0, PERLIN_SIZE-1);\r\n  return map[x + y * PERLIN_SIZE];\r\n}\r\n\r\nexport class AbstractLines {\r\n  constructor (canvas) {\r\n    this.srand = new Srand();\r\n    this.canvas = canvas;\r\n    this.context = canvas.getContext('2d', {alpha: false, desynchronized: true});\r\n    this.context.imageSmoothingEnabled = false;\r\n\r\n    // precompute perlin noise\r\n    this.perlinNoise = generateNoiseMap([0,5],[1,3], {w: PERLIN_SIZE, h: PERLIN_SIZE, octaves: 10});\r\n\r\n    window.addEventListener(\"resize\", ()=>this.resized());\r\n    this.resized();\r\n    this.lastFrame = 0;\r\n  }\r\n\r\n  resized() {\r\n    if (this.h === this.canvas.clientHeight) return;\r\n\r\n    const dpr = Math.ceil(window.devicePixelRatio) || 1;\r\n    this.w = this.canvas.clientWidth;\r\n    this.h = this.canvas.clientHeight\r\n    this.canvas.width = this.w * dpr;\r\n    this.canvas.height = this.h * dpr;\r\n    this.context.scale(dpr, dpr);\r\n    this.progress = 0.0;\r\n    this.invalidate();\r\n  }\r\n\r\n  invalidate() {\r\n    this.srand.seed(this.srand.seed());\r\n    this.context.strokeStyle = rgba(...LINE_COLOR);\r\n    this.context.lineWidth = STROKE_WIDTH;\r\n    this.context.fillStyle = rgb(...BACKGROUND);\r\n    this.context.fillRect(0, 0, this.w, this.h);\r\n    this.streams = new Array(STREAM_NUMBERS * 2);\r\n    for (let i = 0; i < STREAM_NUMBERS; i++)\r\n      this.invalidateStream(i);\r\n  }\r\n\r\n  invalidateStream(i) {\r\n    const x1 = this.srand.inRange(0, this.w/6); // 1/6\r\n    const x2 = this.srand.inRange(this.w/4, this.w*2/6); // 1/4; 2/6\r\n    const x3 = this.srand.inRange(this.w*4/10, this.w*6/10);  // 4/10; 6/10\r\n    const x4 = this.srand.inRange(this.w*7/10, this.w*9/10); // 7/10; 9/10\r\n\r\n    const p1 = 11;\r\n    const p2 = 1;\r\n    const p3 = 5;\r\n    const p4 = 2;\r\n\r\n    const p = this.srand.inRange(0, p1+p2+p3+p4);\r\n\r\n    let x = 0;\r\n    if (p > p1 + p2 + p3) x = x4;\r\n    else if (p > p1 + p2) x = x3;\r\n    else if (p > p1) x = x2;\r\n    else x = x1;\r\n\r\n    this.streams[i*2] = x;\r\n    this.streams[i*2+1] = this.srand.inRange(this.h*1.2, this.h*1.5);\r\n  }\r\n\r\n  draw(t) {\r\n    if (this.progress > 1800) return;\r\n\r\n    let dt = Math.min(16, (t - this.lastFrame))/16; // not speed up when slow fps\r\n    this.lastFrame = t;\r\n    this.progress += dt;\r\n\r\n    for(let i = 0; i < STREAM_NUMBERS; i++) {\r\n      let x = this.streams[i*2];\r\n      let y = this.streams[i*2+1];\r\n\r\n      if (y > 0) {\r\n        let cosX = Math.cos( TAU * x/this.w);\r\n        let cosY = Math.cos( TAU * y/this.h);\r\n        let sinX = Math.sin( TAU * x/this.w);\r\n        let sinY = Math.sin( TAU * y/this.h);\r\n\r\n        /*\r\n        this.velocity=createVector(\r\n          0.4 - 1 * noise( 3 + 2 * cos( TAU * this.positionB.x/width), 2 + 1 * cos( 1 * TAU * this.positionB.y / height)), \r\n          0.4 - 2 * noise( 3 + 2 * sin( TAU * this.positionB.x/width), 2 + 1 * sin( 1 * TAU * this.positionB.y / height)) );\r\n        */\r\n        let vx = 0.4 - 1 * sampleNoiseMapLinear(this.perlinNoise, mix(cosX*.5+.5,1,1/5), cosY*.5+.5);\r\n        let vy = 0.4 - 2 * sampleNoiseMapLinear(this.perlinNoise, mix(sinX*.5+.5,1,1/5), sinY*.5+.5);\r\n\r\n        // this.velocity.mult(4);\r\n        vx *= 4.0*dt; vy *= 4.0*dt;\r\n\r\n        // this.velocity.rotate(0.8*noise(1+sin(TAU*this.positionB.y/height)));\r\n        let angle = .8 * sampleNoiseMapLinear(this.perlinNoise, (0.5*sinY+0.5)*2/5, 0);\r\n        let cosa = Math.cos(angle);\r\n        let sina = Math.sin(angle);\r\n\r\n        // Apply rotation matrix instead of atan2 as p5 does.\r\n        let rvx = vx * cosa - vy * sina;\r\n        let rvy = vx * sina + vy * cosa;\r\n\r\n        this.context.beginPath();\r\n        this.context.moveTo(x, y);\r\n        this.context.lineTo(x + rvx, y + rvy);\r\n        this.context.stroke();\r\n        //this.context.closePath();\r\n\r\n        this.streams[i*2] += rvx; this.streams[i*2+1] += rvy;\r\n      } else if (this.srand.random() < .2) {\r\n        this.invalidateStream(i);\r\n        this.streams[i*2+1] = this.srand.inRange(0, this.h);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n","export class CanvasWorker {\r\n  constructor(draw, active=true) {\r\n    this.draw = draw;\r\n    this.active = false;\r\n    this._loop = (t)=>this.animation(t);\r\n    this.setState(active);\r\n  }\r\n\r\n  play() {\r\n    if (this.active) return;\r\n    this.active = true;\r\n    window.requestAnimationFrame(this._loop);\r\n  }\r\n\r\n  stop() {this.active = false;}\r\n\r\n  setState(active) {\r\n    if (!active) this.stop();\r\n    else if (!this.active) this.play();\r\n  }\r\n\r\n  animation(time) {\r\n    if (!this.active) return;\r\n    this.draw(time);\r\n    window.requestAnimationFrame(this._loop);\r\n  }\r\n}","import { AbstractLines } from \"./Demo/AbstractLines.js\";\r\nimport { CanvasWorker } from \"./Demo/CanvasWorker.js\";\r\n\r\nlet canvas = document.getElementById(\"main-canvas\");\r\nlet demo = new AbstractLines(canvas);\r\nlet worker = new CanvasWorker((t)=>demo.draw(t));\r\nworker.play();\r\n"],"sourceRoot":""}